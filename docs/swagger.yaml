definitions:
  handlers.ChangePasswordRequest:
    properties:
      currentPassword:
        type: string
      newPassword:
        type: string
    type: object
  handlers.ErrorResponse:
    properties:
      error:
        type: string
      message:
        type: string
    type: object
  handlers.LoginRequest:
    properties:
      emailOrUsername:
        type: string
      password:
        type: string
    type: object
  handlers.MessageResponse:
    properties:
      message:
        type: string
    type: object
  handlers.RefreshTokenRequest:
    properties:
      refreshToken:
        type: string
    type: object
  handlers.RegisterRequest:
    properties:
      email:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
  handlers.RequestPasswordResetRequest:
    properties:
      email:
        type: string
    type: object
  handlers.ResetPasswordRequest:
    properties:
      newPassword:
        type: string
      token:
        type: string
    type: object
  handlers.TokenPair:
    properties:
      accessToken:
        type: string
      expiresIn:
        type: integer
      refreshToken:
        type: string
    type: object
  handlers.TokenResponse:
    properties:
      accessToken:
        type: string
      expiresIn:
        type: integer
      refreshToken:
        type: string
    type: object
  handlers.User:
    properties:
      createdAt:
        type: string
      email:
        type: string
      firstName:
        type: string
      id:
        type: string
      lastName:
        type: string
      updatedAt:
        type: string
      username:
        type: string
    type: object
info:
  contact: {}
paths:
  /auth/forgot-password:
    post:
      consumes:
      - application/json
      description: Send a password reset email to the user
      parameters:
      - description: Email address
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.RequestPasswordResetRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Password reset email sent
          schema:
            $ref: '#/definitions/handlers.MessageResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "404":
          description: User not found
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Request password reset
      tags:
      - auth
  /auth/login:
    post:
      consumes:
      - application/json
      description: Authenticate a user and return access token
      parameters:
      - description: Login credentials
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Login successful
          schema:
            $ref: '#/definitions/handlers.TokenPair'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "401":
          description: Invalid credentials
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: User login
      tags:
      - auth
  /auth/refresh:
    post:
      consumes:
      - application/json
      description: Get a new access token using refresh token
      parameters:
      - description: Refresh token
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.RefreshTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Token refresh successful
          schema:
            $ref: '#/definitions/handlers.TokenResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "401":
          description: Invalid token
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Refresh access token
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Register a new user with the provided details
      parameters:
      - description: User registration details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: User created successfully
          schema:
            $ref: '#/definitions/handlers.User'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Register a new user
      tags:
      - auth
  /auth/reset-password:
    post:
      consumes:
      - application/json
      description: Reset user password using reset token
      parameters:
      - description: Reset token and new password
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.ResetPasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Password reset successful
          schema:
            $ref: '#/definitions/handlers.MessageResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "401":
          description: Invalid token
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Reset password
      tags:
      - auth
  /users/me:
    get:
      consumes:
      - application/json
      description: Get the profile of the authenticated user
      produces:
      - application/json
      responses:
        "200":
          description: User profile
          schema:
            $ref: '#/definitions/handlers.User'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get user profile
      tags:
      - users
  /users/me/password:
    put:
      consumes:
      - application/json
      description: Change the password of the authenticated user
      parameters:
      - description: Current and new password
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.ChangePasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Password changed successfully
          schema:
            $ref: '#/definitions/handlers.MessageResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "401":
          description: Invalid current password
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Change user password
      tags:
      - users
  /users/verify-email:
    get:
      consumes:
      - application/json
      description: Verify user's email address using verification token
      parameters:
      - description: Verification token
        in: query
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Email verified successfully
          schema:
            $ref: '#/definitions/handlers.MessageResponse'
        "400":
          description: Invalid token
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Verify email address
      tags:
      - auth
swagger: "2.0"
